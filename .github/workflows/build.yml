name: PROD - Build

on:
  push:
    branches: [ main ]

env:
  run_id: PROD-portal-${{ github.run_id }}

jobs:
  
  build:
    runs-on: ubuntu-latest
    environment: Prod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push the Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          cd simple-demo-app
          docker build -t $ECR_REGISTRY/${{ vars.ECR_REPOSITORY }}:${{ env.run_id }} --target production .
          docker push $ECR_REGISTRY/${{ vars.ECR_REPOSITORY }}:${{ env.run_id }}

      - name: Download docker-compose.yml file
        run: |
          aws s3 cp s3://${{ vars.S3_BUCKET }}/prod/docker-compose.yml .
          cat docker-compose.yml

      - name: Install yq cli tool and update docker-compose.yml file with docker image url
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod a+x /usr/local/bin/yq
          yq e -i '.services.client-app.image="${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ env.run_id }}"' docker-compose.yml
          cat docker-compose.yml
      
      - name: Push updated docker-compose.yml file
        run: |
          aws s3 cp docker-compose.yml s3://${{ vars.S3_BUCKET }}/prod/
